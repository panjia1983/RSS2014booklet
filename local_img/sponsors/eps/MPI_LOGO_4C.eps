%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 8.0.1
%%For: (Tom Nakat) (HAAK & NAKAT)
%%Title: (wort+bild_4c.eps)
%%CreationDate: (3/2/00) (7:06 PM)
%%BoundingBox: 223 361 374 482
%%HiResBoundingBox: 223.1436 361.4414 373.0137 481.0356
%%DocumentProcessColors: Cyan Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Passermarken])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 298 421 298 421
%AI3_TileBox: 249 -312 787 469
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 155.9055 155.9055
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: 127.5 513.5 5.5 1905 1029 18 0 0 7 43 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:249 -312
%%AI3_PaperRect:-29 812 566 -30
%%AI3_Margin:29 -31 -28 30
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 128 104 8
%%BeginData: 12472 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD37FF84843559FD040C0B0C0C0C0B34345959AEAFFD68FFAE8434
%340B0C0B342E59598359848383598334350C0C0B0C0C597DFD63FF84340C
%0C2E3484A8FD10FFA87D590C0C0B5984FD5DFFAF340C0B2E59A8FD18FF84
%590B0C0B59A8FD58FFAF590B0C35A8FD1EFF84590B0C59FD55FFAF340C0B
%59A8FD0AFFA87D8359342E352E342E83598484FD0AFFAF340C0B59A8FD51
%FF840C0C59FD09FF84592E0C0C0C0B0C34352E5934350B0C0C0C0B355984
%AFFD07FFA8590C2E59FD4EFFA8340B35A8FD07FF7D590B0C0B3459A87DFD
%05FF84A8FFFFFFAE84592E0C0B0C2E84A8FD06FFAE2E0C0CAEFD4BFF830C
%0C84FD06FFA85F0C0C0C8384FFFFFFA835FD05FF5959FD05FF59AEFFA859
%340C2E59FD07FF7D340C84FD49FF2E0C2EAFFD06FF590C0B598484A8FD05
%FF0BFD05FF2E84FD04FFAE0CA8FD04FFA8340C0B59A8FD05FFA8340B59A8
%FD46FF2E0C59FD06FF5F0B0C59FFFFFF3459FD05FF34A8FD04FF3584FD04
%FF8434FD04FFAF0BFFAE590B0C59FD06FF830C34A8FD43FFA80B0C7DFD05
%FF830C0B59A8FD04FFA80BAFFD04FF2E84FD04FF0BA8FD04FF0B84FD04FF
%2E59FFFFA8340BAEFD07FF840B0CA8FD41FFAF0C34A8FD05FF340C2EAE59
%FD06FF5959FD04FFA884FD04FFAEFD04FFA834FD04FF3535FFFFFF350BAE
%FD09FFAF0C34A8FD3FFFAF0B0CA8FD04FFAF0C0C59FFAE340CFD05FF840C
%A8FF7D592E0C0B0C0B0C0B0C0B0C0B582EFFFFFF590CA8FFFF590B84FD0B
%FFA80B0CA8FD3DFFAF0B34A8FD04FF840B34A8FD04FF3459FD05FF7D340B
%0C0C0C0B342E592E592E590B340C0C0B0C2E83A8FFFF590B83FD0DFFAF0B
%34A8FD3CFF0C0CA8FD04FF840B34A8FD05FFA80C59FF8434050C0B2E2E84
%FD0CFF7D58050C0B0C0C830B59FD0FFFA80B2EA8FD3AFF2E0C84FD04FF5F
%0C3584FD07FFA8AE2E0C0B3459FFFFFF845934340C0C0BFD040C595984A8
%FFFF5F0B0C0C35FD11FFAE0C35FD39FF590C59FD04FF590B59FF590B83FD
%05FF590B0C0B83FFFF592E0B0C0B3434835983598359592E0C0B0C0C59A8
%A80B0C8AFD12FF840B59FD37FF840C34FD04FF840C59FFFFFFA80C35AEFF
%83340C0C59FFA8350B0C2E84A8FD0CFFAF83340B0C0C590CFD14FF590CA8
%FD35FFA80C0CFD04FF840B34A8FD05FF2E59590C0B58FFA82E0C0B59A8FD
%12FF8305FF2E83FD14FFA82E0BFD35FF590CAEFD04FF0C34FD08FF2E0C0B
%FFFF5F0B3459FD13FF59AF0CFFFF340C590C3434FFFFAEFD0EFFA80C34FD
%33FFA80B59FD04FF2E0C7DFD07FF0B0C0BFFA8340B59A8FD12FF840B3534
%84FF350B84A8FF3483590C0B59FD0EFF590C84FD32FF0C2EAFFFFFFF590C
%83840B5984FFFFFF2E0C0CFF840C0BA8FD13FFA82EFF5934FF340BFFFFFF
%2E340C0C0C840CFD0FFF0C34FD31FF7D0C7DFFFFFFA80C2EFFFFAF592E0B
%840B0C0BFF590C2EAFFD12FFA8FF0BFFFF2E0C2E0B8459590C84590C34FF
%A80CA8FD0EFF840B84FD30FF342EFD04FF590CFD06FFAF580C2EFF590C2E
%FD13FF590C5984FF84122E0C340C35A8FF7D0C83FFFF5935FD10FF340CFD
%2FFF840B84FFFFFF840B83FD06FF7D0C0BFF830C2EFD13FF34595934A8AF
%0B597DFFAE3484FF590C84FFFFFF830CA8FD0FFF830C7DFD2EFF0C34FD04
%FF0C34FD06FFAF0C0BFF840C2EFD13FF5959FF590CAF0B84FFFF843484FF
%5934A8FD05FF8334FD10FF0C34FD2DFF830C7DFFFFFF7D0C52AEFD05FF2E
%0B83A80C0BFD12FFAFA82EA8FF0B0C0B5983590C59A8FF3434A8FD07FF59
%59FD0FFF840B84FD2CFF590CFD04FF340CAE0C0C0C5959AF0B34FF590BFD
%12FF840B8483FF595F0C340C352EFFFFFF5935FD0AFF59A8FD0FFF2E34FD
%2CFF0B59FFFFFFA80B84FFFFAEA87D840B0C7D840B83FD11FF832E590CA8
%A80C0CA8FFFF2E84FFFF3434AEFD09FFA85959FD0FFF590CA8FD2AFF840C
%A8FFFFFF3434FD06FF590C2EFF0B35FD11FFA82EFF5934840C35FFFFFF35
%59FFFF5934AFFD07FF84832E0C0BA8FD0FFFAF0C84FD2AFF590CFFFFFFA8
%0C34FD06FF0C05FF590C84FD11FF34A8FF590C0C0BFF84590B84FFFF590C
%A8FD05FF84590B0C0B0C0B0C59FD10FF2E34FD2AFF0C59FFFFFF840BAEFD
%05FFAF0B59FF2E34FD10FF5F590CFFFF2E842E350C3583FFFFFF8334A8FD
%04FF840C0C2E2E0CAF840C0C84FD10FF590CFD29FF840C84FFFFFF340CFD
%06FF2E0C7D840BA8FD0FFF592E342EFF2E352E8384840CFFFFFFA80C83FF
%FFFF590C0B59A8FF0B2E2E0C590C84FD10FFA80BA8FD28FF840BFD04FF34
%5984595934347D0C0CFF0C34FD0FFF8435FF0B59840C7DFFFFFF2EA8FFFF
%A83484FFFFAF2E0C0B84FFFF59343584AFFF5984FD10FFAF0C59FD28FF2E
%34FFFFFFA80B84595959A884840B59A80C59FD0FFF0BFFFF0C0B0C59FFFF
%A80C84FFFFA82E59FFFF840B0C340C34842E0C7DFD04FFAE0BFD11FF0C35
%FD28FF2E59FFFFFF7D0CAFFD05FF2E0C8B840BFD0EFFAFA85FFFFF2E5935
%84593435AFFFFFFF5959FFFF590B59AFAF0B0C0C3584FD06FF3583FD10FF
%5F0CFD28FF0B83FFFFFF590BFD06FF0C0BFF2E34FD0DFF840B5959FF5960
%2E350B3459FD04FF592EFFFF830B83FFFF590C84FD09FF8359FD10FF590C
%AEFD26FF840CA8FFFFFF3435FD06FF0C34FF0C59FD0CFFAF0CAF0C84A834
%0C84A8FF3584FFFFFFA80BFFFF840B84FFFF830C83FD04FFA8340C59FFFF
%FF0CFD10FFA80BAFFD26FF840BA8FFFFFF0C34FD05FF7D0C2EA80B84FD0C
%FF2EA8FF2E340C0BFFFFFF7D35FD04FF0BA8FFA80B59FF830C0C59FD04FF
%5934AFFF84FFFFFF83FD10FF840C83FD26FF590CFD04FF0C84FFFFA85F0C
%8B0C8A840CA8FD0BFFA859FFFF0C0C2EFFFFFF3459FD04FF2E84FFFF0C2E
%A8840C84A8FFFFFFA85984FFFFFF59FFFFFF2EFD11FF0B84FD26FF830BFF
%FFFFA80C59590C0C59842E0C7D830BFD0BFF848459FFA8350B5959342E84
%FD04FF5935FFFF2E0C0B0C0B35FD04FFA859A8FF83340B83FFFFFF5959FD
%10FF0C59FD26FF590CFFFFFFA80BAF35A8FFFFFF590BFF590CFD0AFF840C
%3484FF84358334352E84FD04FFA82EAFFF590C0B340C0C34FD07FF2E3459
%34FD04FF8434FD10FF0C84FD26FF830BFFFFFF840C84FD05FF2E0CFF830B
%FD09FFA82EA82E59FF0B3483FFFF3484FFFFFFA82E84FFA80C0BA8593584
%0CA8FFFFFFA8840C59A8FF2EFD05FF0BA8FD0FFF0C59FD26FF590CFFFFFF
%AE0BAFFD05FF590BFF590CFD09FF5F84FF34350C60FFFFFF8434FD04FF83
%59FFFF350CAFFF8334FF2EA8FFFFFF59340C0B0C0C0CA8FD04FFA834FD0F
%FF0C84FD26FF830BFFFFFF840C84FD05FF2E0CFF830BFD09FF0CFFFF590B
%35FFFFA8592EFD04FFA80BFFFF830BA8FFA80B59FF3459FD07FFA8AFFD06
%FFA80CA8FD0EFF0C59FD26FF590CFFFFFFAF0CA8FFFFFFA82E590CFF590C
%FD08FFAE35FFFF340C5984343483FD05FF0C84FFAF0C59FFFF0C59AFFF0C
%84FD10FF5959FD0EFF0B84FD26FF590BFFFFFFA80C59FFA8590B832E0C7D
%590BFD07FF2E592EFFA82E5935050C0B59FFFF84590B2EFFFF0C0C59FF34
%59FFFF0C0CA8FD10FFAF0BFD0EFF0C59FD26FF590CFD04FF0C84843434FF
%FF8B0C8A830CA8FD05FF83593434FF840C5984FFFF5983FF2E3584842E59
%590C2E84A85FFFFF590C84FD12FF5F59FD0DFF0B84FD26FF840BA8FFFFFF
%0C595959FFFFFF7D0C2EA80BA8FD05FF2EA8A80C840B84FFFFFF842EFF59
%3434592E840B0C2E3559FFFFFF840C59FD0DFF83AFFD04FFA80CFD0CFF84
%0C83FD26FFA80C84FFFFFF2E59FD06FF0B59FF0C59FD04FFAF59FFFF590C
%59FFFFFF842EFFFF348459FFA859840C840B84FFFFFF840CFD0EFF59FD06
%FF0BFD0CFFAF0CA8FD27FF0B59FFFFFF590BFD06FF0C05FF2E34FD04FF59
%84FFFF2E0C59592E2E59FFFFFF0BA859FF8483A80C0B0C59FFFFFF590CFD
%0EFF2EFFA8592EFFA859FD0CFF590CA8FD27FF2E59FFFFFF830CA8FFFFFF
%A8592E0CFF5F0BFFFFFFA884A8FFFF597D3512340C5FFFFFFF0CA8A8FF84
%A8FF350C340C34FFFF5F35FD0EFF59593559FF8359A8FD0CFF5F0CFD28FF
%2E34FFFFFFA80B84FFFFA83459590B59840C7DFFA80C0B84FF840B3584FF
%FF8359FFFFFF0BA834FF8459FD04FF7D0C0B340BA8FD0EFFA884845959FD
%0FFF0C35FD28FF840CFD04FF3434FFFF3434FFFF0C0BFF0C34FF59A8350C
%FF0C84FFFFFFAF0CFD04FF59595983FD07FFA8AFA8FD12FFAF84FD10FF0C
%59FD28FF840C84FFFFFF340CA8342EFFFFFF0B0C7D830B840CFFA82E0B34
%FFFFFFA80CA8FD04FF340C8459A8FD1BFF59A8FD0FFFA80BA8FD29FF0C59
%FFFFFFA80BA834FD04FF8A0B59AF0C2E84FFFF0C3583A8593435FD05FFA8
%0C2E35FF8359AFFD19FFA859FD0FFF590CFD2AFF590BFD04FF0C2EFD06FF
%0C0BFF590C59FFFF347D5F2E350C3584FFFFFFA82E7D0C0B59A883FD19FF
%592E59FD0FFF0C34FD2AFF830CA8FFFFFF590CA8FD04FF35590C2EFF0C83
%FFFF0C592E84A8FF5984FD04FF832E2E840CFFFFFFA8FD15FFAF8384597D
%FD0EFFA80B84FD2BFF0B59FFFFFFAE0B59FFFFFF840BFF0B0C7D590BFFA8
%0C59FFFFFFA82EFD04FF590C59FFFF342EA82E83FD14FF7D83A8FF5959FD
%0EFF340CA8FD2BFF590CFD04FF590CFFFFFF0C84FF8A0B34FF347D5934FF
%FFFFA82EA8FFFFAE0C34A8FFFFFF2E2E0B0C59FD16FF84343559FD0EFF2E
%34FD2CFF830C83FFFFFF840C59FF832EFFFFFF2E0B83590C0BFFFFA83434
%A8FFFFA859A8FD05FF0C84590B0C83FD16FFA82EFD0EFF840B84FD2DFF0C
%34FD04FF342EAF3484FD04FF0C0BFF2E0C0C595984FD0CFF2EA8A80CA834
%84FD15FF34A8FD0EFF0C34FD2EFF840B84FFFFFFA80B5959FD04FF35580C
%050C0B0CA8FD0EFF3459FF0BA8A80C59FD14FF3483FD0DFF7D0C7DFD2FFF
%342EFD04FF590BAFFD04FF0CFF580C0CAF0C34A8FD0DFF5959FF5959FFA8
%2E59FD13FF3484FD0DFF340CFD30FF7D0C83FFFFFFAE0C0CFFFFFF8334FF
%A80B59FFFF2E0CA8FD0CFF840CFF832EFFFFAE340CFD12FF3459FD0CFF84
%0B84FD31FF0C34FD04FF840C59FFFF5F59FF590CAFFFFFFF5934A8FD0CFF
%0CAFFF0CFD04FF350B84FD10FF2EA8FD0CFF0B34FD32FFA80B59FD04FF34
%0C83FF2E84FF592EFD05FF342EA8FD0BFF0BA8FF347DFD04FF590B59A8FD
%0DFF7D0CFD0CFF590C84FD33FF590CAEFD04FF0C34A82EA8FF3459FD06FF
%0C84FD0BFF59A8FF595FFD06FF342E59FD0BFF590C84FD0BFFA80C34FD34
%FFA80C0CFD04FFA80B3483FFFF352EFD06FF3534FD0BFF0B84FF832EFD07
%FF842E0B5983A8FD04FF84590B34A8FD0BFFA8340BFD36FF840C35FD04FF
%A80B35FFFF5934FD06FF2E59FFFFFFAF5984595934350C0CAEFF5959FD09
%FFA859340C0C0B0C0C3459AFFD0DFF590BA8FD37FF590C59FD04FF840B34
%A8830BFD05FFA80C2EFF590C0B35345959592E5984FFFF592EFD0BFF0CFF
%A8A8A8FD10FF840B59FD39FF340C83FD04FFA80C35A80C59FD04FF590BA8
%FFAFA8FD0BFF0C83FD0AFFA859FD13FFA80C59FD3BFF2E0CA8FD04FF840B
%0C0B0CAEFFA8350B0C34592E340B0C0B342E352E8359590C0C7DFD0AFF84
%59FD12FFA80B34AEFD3BFFAF0C2EA8FD04FFA80C0C0B83FFA80B0C0C0C0B
%0C0C842E0C598459340C0C2E830C59FD0AFF5984FD11FFAF0C2EA8FD3DFF
%AE0B0CA8FD04FFAE0C0C0BA88434840C84FF0B83FF590BFFFFFF2E0CFFFF
%FF592EFD0AFF3559FD10FFA80B0CA8FD3FFFAF0C34A8FD05FF340C0CAE0B
%350CFFFF0C59FF3434FFFFFFA80C84FFFF590CFD0AFF3484FD0FFFAE0C34
%A8FD41FFA80B0C83FD05FF830C2EA80C0CA8FF0B83FF342EFD04FF590B59
%590C83FD0AFF352EFD0EFF840B0CA8FD44FF2E0C59FD05FFAFAFFFFF0B59
%FF0C59FF590CAFFD04FF840C3484FD0BFF590CFD0DFF5F0B35FD47FF340C
%2EAFFD07FF840B2E0B59FF840B84FD04FF7D0CA8FD0CFFA80B84FD0AFFA8
%340B59A8FD48FF830C0C84FD08FF83350B84A80C0CFFFFFF830C0CFFFFFF
%A8AEA8AF848459AFA8FFFF342EFD09FF7D340C84FD4BFFA8340B35A8FD08
%FFA80C0C0B0C0B0C0B0C0B0C2E0C0B0C0B0C0B0C0B0C0B0C0B2E0B0C84FD
%06FFAF2E0C0CAFFD4EFF840B0C59FD0DFF84AFFD0EFF84AF848459FD05FF
%AE590B3459FD51FFAF340C0B59A8FD22FFAF340C0B59A8FD54FFAF590B0C
%35A8FD1EFF84590B0C59FD59FFAF340C0B0C34A8FD18FF84590B0C0B59A8
%FD5CFFAF84350C0B34358484FD0FFFAFAF59590B0C0C5983FD62FFA88434
%2E0B0C0B2E2E59598359595983595934350C0C0B0C0C597DFD6AFF848435
%59FD040C0B0C0C0C0B34345959AEAFFDFCFFFDFCFFFDBEFFAFA8A884AFA8
%A884AFA8A884AFA8A884AFA8A884AFA8A884AFA8A884AFA8A884AFA8A884
%AFA8A884AFA8A884AFA8A884AFA8A884AFA8A884AFA8A884AFA8A884AFA8
%A884AFA8A884AFA8A884AFA8A884AFA8A884AFA8A884AFA8A884AFA8A884
%AFA8A884AFA8A884AFA8A884AFA8A884AFA8A884AFA8A884AFA8A884AFA8
%A884FD80FFAFA8FFFFAFAFFFFFFFA8FFFFFFA8AEFFAFA8FD05FFA8AFA8FF
%FFFFA8FD0AFFAFA8FFA8FFFFFFA8AFAFFFFFAFA8FFA8FD07FFA8FFAFFFFF
%AFA8AEA8FFFFFFA8FFFFFFA8AFA8AFFFFFA8AFFFFFFFAEA8FD04FFAFA8FF
%FFFFAFAEA8FFFFAEA8FFA8AEFD08FFA8AFA8FFFFAFA8AEA83434FF590CFF
%FFFFA834FFFFFF840BAF2EAFFD05FF5934842EFFA80CA8FD04FF8434FFFF
%FF340CAE59A8FFA834830CFFFF34598459A8FD05FF5959590CFFFF345959
%0CFFFF2E842EFFA83459592EFFA80CA8FFFFFF2E84FFFFFF59593484FF83
%35590CFFFF2E84A83459FFFFFF2E84FFFFA834593559A80C34590C840BAF
%2E35FFFFFF5F0CAFFFFFFF592EA8FD06FF5984FF0CFFFF0BFD05FF352EFF
%FFFF84595959FFFF5959FFA8FFFF843483FD06FFA80CFFFF84FFFF845984
%A8FFA85984FFFFFF348483AFFFFF0BFD04FF59A8FFFFFF2E84A8FFFF3484
%FF84FFFF59A8FF2EAFFFFFA83459FFFFFF348484AFAEAF2EAF84FD04592E
%FFFFFF343459FFFFFFA80CA8FD06FF83345983FFFF0CFD04FFA8590BA8FF
%FF59FF0B35FFFF0BA8FD04FF590C34FD06FFA80BFD05FF590C2EFFFFFF59
%0C0CFFFF350B59FFFFFF0CFD04FF2EA8FFFFFFA82E0C83FF0BA8FD04FF2E
%84843484FFFF83590CFFFFFF350B59FFFFFF3484FF84840C8459FFFFA884
%7D35FFFFFF835959FFFF845983FF5984FD04FF0BFFFFAEFF84845959FFFF
%84FF840CFFFF59A8FFA8FFFF84593483FFFF5934AFA834FF840B84FF8459
%AEA8FFA8FFFF35A8FF3484A8AFFFFF0BFFFFAEFF59A8FF84FF84FF7D84FF
%34A8FF84FFFF59A8FF34AFFFFF59AF2EAFFFFF3484A8FFFFFF34AFFF59A8
%0C842EAFA859A8AF0BA8FF8459FF0B83FD04FFA85959FFFFFFA80C843559
%AF2EFF832EA8FF59AFFF34FFFF8359590C84FF5959830C84FD05FF348484
%34FFFF59598435AEA80B830BFFA83459842EFFA80C843559FF0C845934FF
%0C593483FF8359590CFFFF0C84AE3459FF8459FF5959FFA83483FFFFFFAE
%3459FFAFAEFFA8AFAEFF84FFAEA8A8FFA8AFAFAFA8FD05FF84AFFFFFFFAF
%A8A884FFAEA8AFAFA8FFAFAFAEFFA8FFFFFFA8AFFFFFAFAFA8FF84AFFD06
%FFA8AFFFFFAFAFA8A884FFFFFF84FFFFFF84AFA8AFFFAFA8A884FFFFA884
%AFA8FFA8AFA8FFFFFFAEA8AFFFFFA884FFA8A8FFAFA8FF84AFFFFF84AFFD
%04FFA8A8FD80FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Passermarken]) 0 Xs
([Passermarken]) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Angleichungen-Zusatzmodul) (Angleichungen)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (Bildpinsel-Werkzeug)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (Bildpinsel-Werkzeug)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (R\237ckg\212ngig: Neuer Kalligraphiepinsel) (Kalligraphiepinsel-Werkzeug)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (Spezialpinsel-Werkzeug)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Ebene 1) Ln
0 A
u
*u
0 O
1 0 0.57 0.3 k
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
247.4429 428.9438 m
247.4429 456.8643 270.1563 479.5801 298.0791 479.5801 c
325.999 479.5801 348.7148 456.8643 348.7148 428.9438 c
348.7148 401.0215 325.999 378.3047 298.0791 378.3047 c
270.1563 378.3047 247.4429 401.0215 247.4429 428.9438 c
f
1 D
245.9844 428.9438 m
245.9844 400.2188 269.353 376.8496 298.0791 376.8496 c
326.8047 376.8496 350.1729 400.2188 350.1729 428.9438 c
350.1729 457.6665 326.8047 481.0356 298.0791 481.0356 c
269.353 481.0356 245.9844 457.6665 245.9844 428.9438 c
f
*U
u
*u
0 D
332.3057 420.4707 m
330.8867 419.1514 328.8779 419.1289 327.251 418.0596 C
326.5039 417.3125 326.6934 416.4648 326.998 415.5254 C
327.5996 414.335 327.3721 414.458 326.5313 414.1777 c
324.5684 413.5234 324.5898 411.375 322.2275 411.7354 C
322.0938 411.6953 321.541 411.9717 321.8682 411.5762 c
322.1221 411.2734 322.2275 411.4561 322.7285 411.3955 C
323.5693 411.3555 323.8828 411.7021 324.4736 412.1035 C
325.3164 412.8125 325.2158 413.0791 326.252 413.5771 C
326.5 413.6357 327.1113 413.8174 327.4521 413.6973 C
327.6826 413.4854 327.6895 413.4805 327.7266 413.29 C
327.5918 412.7148 326.752 412.2363 326.4316 412.0361 C
326.873 411.7129 327.6992 411.166 327.5654 410.708 C
327.377 410.4072 327.3857 410.3564 327.0518 410.1943 c
326.585 409.9678 325.6504 410.002 324.7695 410.6543 C
324.6357 410.6143 324.4893 410.915 324.1123 410.5566 C
324.9707 409.6738 326.1719 409.875 326.3516 409.6943 c
326.5313 409.5146 325.71 408.4482 325.6729 408.2188 C
325.0977 406.6875 325.8037 405.2783 325.4961 403.6885 C
325.3066 402.4443 324.9346 401.8525 323.8457 401.0693 C
321.8477 399.6855 320.4473 399.2852 318.2051 398.9258 C
312.3271 398.5234 308.6182 400.541 304.3857 403.7021 c
300.1523 406.8633 298.5332 408.5449 297.2119 410.3242 C
297.1929 411.0518 297.728 411.6055 297.2705 412.3926 C
296.8882 412.2588 296.9258 411.7607 296.6953 411.4727 C
296.3691 411.0117 295.585 410.6689 295.0283 410.7256 C
293.2871 411.3193 293.1904 413.3672 292.1016 414.5352 C
289.7656 416.834 289.1128 420.1465 290.3594 422.9209 C
290.7983 423.7827 291.5825 424.6064 292.4653 424.9116 C
293.5542 425.0854 294.8389 425.0854 295.5479 424.0313 C
296.3877 423.2285 296.9072 421.9258 297.1157 420.7778 C
297.4609 420.2207 297.0405 419.5898 297.6133 419.1289 C
298.6084 419.0361 299.4697 418.7871 300.4277 419.3975 C
301.1367 419.3037 301.2334 418.5166 301.7686 418.1738 C
302.7266 417.5986 L
303.7402 417.1797 305.0439 417.1797 305.9053 417.9258 C
307.5137 419.5713 307.1621 421.2646 307.7168 423.0815 C
309.25 424.4404 310.2686 426.3857 310.25 428.2832 C
310.1543 429.4497 309.7344 430.6563 309.0439 431.8228 C
309.1582 432.5132 309.541 433.0293 309.7715 433.6426 C
309.9639 433.7573 310.2129 433.7573 310.4219 433.7949 c
312.126 434.1587 313.6777 435.7104 314.3467 437.3374 C
314.499 437.4897 L
316.4521 437.6235 318.8848 438.314 320.0137 440.3633 C
320.2441 441.2437 321.2393 440.5938 321.8516 440.8022 C
322.8848 440.8608 323.9199 441.4336 324.7041 442.105 C
324.9346 442.1826 325.1055 441.9312 325.2422 441.8188 C
325.6992 440.2856 326.543 438.8115 327.0215 437.2598 C
327.6143 436.0928 327.8271 434.9829 327.6143 433.7949 C
327.8643 431.978 328.8975 430.2739 329.625 428.4355 c
330.3525 426.501 331.4814 424.5479 332.3057 422.5571 C
332.458 421.7544 332.8027 421.1201 332.3057 420.4707 C
f
1 D
332.7041 423.812 m
331.3262 426.9907 329.7773 429.7275 328.6445 432.9253 C
327.8418 434.0732 328.3027 435.2983 328.2061 436.5239 C
327.6895 438.4395 326.8848 439.9141 326.1191 441.7705 c
325.9082 442.3057 326.502 442.4609 326.7139 442.8408 C
327.0586 443.7803 326.8096 444.8345 326.3867 445.7334 C
326.2158 446.2495 326.8281 446.6138 326.7139 447.1489 C
326.6914 447.9727 325.9668 448.5293 325.3916 448.9683 C
324.5293 450.2124 324.1289 450.8652 323.0557 451.9941 C
323.0557 452.2056 L
323.5908 452.6821 324.0332 453.5059 324.0137 454.2148 C
323.8018 455.0176 323.6309 455.7642 322.8633 456.3208 C
321.6396 457.0107 320.3965 455.938 319.4199 455.3818 C
319.1494 455.1919 319.0156 454.999 318.6328 455.0366 C
318.3857 455.125 318.1279 455.2168 317.8682 455.3105 C
317.6182 455.0254 317.3076 454.7231 316.9268 454.4219 C
318.1162 453.9395 L
318.1592 453.9072 318.1758 453.8833 318.1758 453.8433 c
318.1758 453.8218 318.168 453.7842 318.1621 453.752 C
318.0791 453.6802 315.4082 451.3389 Y
315.4014 451.3335 310.5957 446.5845 Y
310.5957 446.5815 309.2168 445.1846 Y
309.21 445.1768 304.9395 440.2563 Y
302.7051 437.666 299.4063 433.4146 297.4204 430.3032 C
296.3877 428.8794 295.3574 427.2983 294.397 425.8027 c
294.293 425.6367 294.0972 425.6499 293.7871 425.6875 c
293.5757 425.7114 293.3589 425.7334 293.1636 425.6665 C
293.1689 425.6665 293.1719 425.6665 Y
293.1289 425.6553 L
293.1396 425.6582 293.1528 425.6611 293.1636 425.6665 C
292.0771 425.5459 291.2881 425.1846 290.4429 424.4194 C
289.3457 423.127 288.7944 421.5615 288.7944 419.873 c
288.7944 418.7129 289.0591 417.4893 289.5918 416.2607 C
289.3672 415.6025 288.8506 415.0225 288.3877 414.5088 C
288.1309 414.2197 L
287.8018 413.8965 L
287.5879 413.6924 287.3442 413.4629 287.1675 413.2383 C
287.1514 413.2168 L
287.1406 413.1895 L
287.1191 413.1182 287.1089 412.9814 287.3203 412.8789 C
287.3706 412.8525 L
287.4272 412.8662 L
288.439 413.1064 289.0757 413.8672 289.6934 414.6025 C
290.0815 415.0488 290.1377 415.1162 V
290.2285 415.1318 290.3037 415.0811 290.4375 414.9688 c
290.5068 414.9102 290.5869 414.8535 290.6782 414.8105 C
290.6782 414.79 290.6782 414.7607 Y
290.6646 414.4336 290.6621 414.3594 V
288.2671 411.9941 286.3169 410.6582 283.7671 409.1602 C
283.3413 408.9111 L
283.8335 408.8604 L
284.8291 408.7617 285.7734 409.3203 286.686 409.8613 C
287.7832 410.4658 L
288.7969 410.9854 289.7363 411.7773 290.6484 412.543 C
291.4727 413.2275 291.561 413.2988 V
291.6465 413.2861 291.7427 413.1768 291.8179 413.0879 C
291.8716 413.0293 291.9063 412.9922 V
291.9224 412.9629 292.6714 411.4805 292.7168 411.3916 C
292.5454 410.6875 292.4707 409.9844 292.4707 409.2813 c
292.4707 407.748 292.8027 406.2227 293.1289 404.7295 c
293.4497 403.2578 293.7817 401.7383 293.7817 400.2451 c
293.7817 400.1465 293.7793 400.0498 293.7764 399.9512 c
293.7764 399.4902 293.2705 398.8779 292.8506 398.6855 C
291.8926 398.5225 290.7368 398.5107 289.5112 398.5 c
288.0107 398.4873 286.4561 398.4736 285.2627 398.1504 C
284.8774 398.1045 284.4331 397.9785 284.0024 397.8584 c
283.5796 397.7402 283.1436 397.6182 282.7368 397.5615 C
282.6968 397.5566 L
282.6509 397.5215 L
282.5039 397.4189 L
282.3677 397.334 282.1992 397.2305 282.1587 397.0293 c
282.1563 397.0137 282.1538 396.9941 282.1538 396.9756 c
282.1538 396.8604 282.207 396.7354 282.2925 396.6465 c
282.3755 396.5605 282.48 396.5215 282.5869 396.5313 C
282.9482 396.5313 283.3521 396.6777 283.7456 396.8203 c
284.0186 396.9189 284.3047 397.0234 284.5669 397.0684 c
287.0605 397.4941 289.7949 397.4092 291.6465 397.2598 C
292.5615 397.2754 294.0625 397.3047 294.603 398.6025 C
294.7983 399.1289 294.8652 399.6191 294.8652 400.0898 c
294.8652 400.6094 294.7852 401.1094 294.7021 401.623 C
294.5391 402.8857 L
294.4292 403.6563 294.2661 404.4238 294.1079 405.1689 c
293.8276 406.4902 293.5381 407.8486 293.5381 409.2246 c
293.5381 409.5029 293.5542 409.7832 293.5781 410.0645 C
293.605 410.0996 293.6343 410.1426 293.6694 410.1475 c
293.75 410.1582 293.8916 410.0459 294.0039 409.957 c
294.1323 409.8564 294.2632 409.7598 294.4077 409.7227 C
294.5737 409.5967 294.7612 409.5615 294.9321 409.54 c
295.1704 409.5078 295.2988 409.4785 295.374 409.2939 C
295.481 408.085 295.8984 406.835 296.3022 405.626 c
296.5806 404.7939 296.8696 403.9316 297.0542 403.0918 c
297.3833 401.6211 297.7148 400.127 297.7148 398.6563 c
297.7148 397.7813 297.5972 396.9111 297.2896 396.0586 C
296.6499 394.8936 295.2505 394.8887 293.8994 394.8828 C
293.4956 394.8828 L
290.1831 395.084 L
287.3413 395.29 284.4038 395.501 281.3911 395.0146 c
281.4121 395.0176 280.7168 394.9414 Y
280.3447 394.8857 279.9941 394.8398 279.6172 394.9287 C
279.478 395.041 279.3652 395.2363 279.3652 395.4395 c
279.3652 395.5039 279.376 395.5703 279.4028 395.6357 c
279.9409 396.8232 280.2114 397.8965 280.2114 398.8457 c
280.2114 399.6162 280.0342 400.3047 279.6812 400.9082 C
278.9023 402.4023 278.0464 403.4375 276.9897 404.1602 C
275.6963 405.4541 274.5903 406.6016 273.6074 407.7188 C
273.0327 407.791 272.6792 407.9043 272.6411 407.917 C
272.5132 407.9609 L
271.938 407.252 L
272.6846 406.5439 273.3745 405.835 274.2173 405.0693 C
275.4995 404.3789 276.5347 403.1348 277.4526 402.292 C
278.563 400.9922 278.8301 399.6133 278.6001 398.0811 C
278.4478 396.2637 276.7832 395.4775 275.6519 394.2705 C
275.1943 393.4082 274.9053 392.376 275.5366 391.5703 C
275.9409 390.5 277.6611 390.6934 277.8726 389.8105 c
278.3462 387.8652 281.7202 386.7412 282.3784 386.6953 c
283.0337 386.6504 283.7134 385.9258 Y
285.0537 384.9482 286.8145 385.1846 287.7402 385.3262 c
288.6631 385.4648 290.3169 384.7188 291.3521 384.8711 C
292.9014 385.4844 294.167 385.1973 295.7749 385.3311 C
300.8291 385.2529 306.5713 385.3691 311.7402 384.7188 C
312.6982 384.834 313.8457 384.0869 314.748 384.5439 C
314.9775 384.9297 314.8047 385.2529 314.748 385.5801 C
312.2783 389.4648 311.9082 393.8262 313.3086 398.0596 C
314.2422 398.0049 L
317.5938 397.6406 320.6436 398.0742 324.0488 400.0469 c
325.7539 400.9854 326.6494 403.1807 326.5723 404.7695 c
326.5156 405.8027 326.1572 407.0225 326.3311 408.1143 C
326.3906 408.6016 326.7139 409.3418 327.1318 409.5742 c
327.3125 409.6738 327.9395 410.0996 328.1367 410.6445 c
328.46 411.5313 327.7656 411.9492 327.5654 412.0693 C
328.1064 412.29 328.6309 413.3965 328.1328 414.2578 C
327.8125 414.5977 327.4404 415.9434 327.4014 416.3848 C
327.2861 417.0156 327.2676 417.666 327.8613 418.0703 C
329.2021 418.7764 330.4648 418.9502 331.8613 419.5625 c
332.8193 419.9648 333.3164 420.9595 333.2793 421.8589 C
332.7041 423.812 L
f
0 D
277.9717 392.2451 m
277.8003 391.9375 277.8242 391.7314 277.7466 391.3613 C
277.6533 391.1934 277.1743 391.4209 277.022 391.5146 C
276.4277 391.8359 276.4678 391.6729 276.2964 392.2236 C
276.2002 392.5928 276.2109 393.0264 276.8237 393.3477 c
277.2061 393.5645 277.9717 393.8232 278.2202 393.3477 C
278.2979 393.0264 277.9155 392.6113 277.9717 392.2451 C
f
281.2388 388.1084 m
280.4541 388.0898 279.9033 388.5176 279.5396 389.4434 C
279.1729 390.6211 279.0498 391.6611 279.3037 392.873 C
279.3843 393.0264 279.5581 393.125 279.6704 393.0742 C
280.7651 393.4463 L
281.1318 393.5957 281.4312 393.6475 281.7817 393.5645 C
282.0039 393.3447 L
281.9873 392.7051 281.8296 392.2344 281.814 391.6436 c
281.7495 390.1602 281.624 389.7188 282.0518 388.3066 C
281.894 387.9346 281.5781 388.1143 281.2388 388.1084 c
f
326.2285 443.1782 m
326.1221 443.0659 325.9883 442.9268 325.8096 442.9746 C
325.4023 443.2583 325.5566 443.6196 325.5811 443.9624 C
325.665 444.0449 325.6777 444.0933 325.8096 444.0933 C
326.002 444.1255 326.1094 443.9834 326.1807 443.8818 C
326.3018 443.6597 326.3145 443.4082 326.2285 443.1782 C
f
295.1626 425.2485 m
297.8433 430.0542 301.0996 434.228 304.584 438.5171 C
309.4658 444.0664 L
312.9492 447.7827 316.7979 451.5928 321.0684 454.5386 C
321.6025 454.8467 321.8389 455.4751 322.3926 455.0337 C
322.8945 454.5708 L
323.2324 454.188 322.9375 453.1021 322.5928 452.7969 C
322.3174 452.5723 322.0498 452.3501 321.7852 452.1309 C
322.6172 451.3066 323.8184 449.7388 324.8057 448.7246 c
325.2393 448.2778 325.1055 447.8149 325.8809 447.4536 c
326.2695 447.2715 326.3789 446.8491 326.1484 446.4854 C
325.4609 445.605 324.3125 445.7388 323.4111 445.5088 c
320.0625 444.7622 317.3535 443.8042 313.6484 442.0063 C
310.6816 440.4355 308.3076 438.6938 306.1611 435.9941 c
305.3398 434.98 304.4199 434.2124 303.7324 432.9893 C
301.7793 430.4795 300.2275 428.125 298.6758 425.5405 C
298.1216 424.7271 297.9399 424.3232 297.1636 423.5869 c
296.7866 423.2285 296.4497 423.9775 296.2139 424.2373 c
296.187 424.2666 296.1709 424.2988 296.1523 424.3281 C
296.0718 424.3179 295.9893 424.3335 295.9092 424.3872 C
295.7002 424.6548 295.0474 424.77 295.1626 425.2485 C
f
324.6934 443.8125 m
324.6426 442.8838 323.4033 442.1162 322.3682 441.8296 C
321.9268 441.7603 321.5195 441.7866 321.1289 441.7866 C
321.0273 441.8589 320.9102 441.9448 320.9258 442.0439 c
320.9932 442.4854 321.0625 442.7422 321.0947 443.1406 C
321.3516 443.3281 L
322.2656 443.5122 323.3848 443.7104 324.3027 443.9541 C
324.4395 443.9248 324.6074 443.938 324.6934 443.8125 C
f
315.0723 441.396 m
315.2383 441.6074 L
315.9863 441.9634 316.6855 442.2388 317.5176 442.4795 C
318.5146 442.7393 L
318.7793 442.98 319.2461 443.1753 319.5137 442.8354 C
319.5293 441.5435 318.5635 439.9917 317.1348 439.395 c
316.6855 439.1997 316.0859 439.1353 315.5527 439.0044 C
315.4189 439.1191 314.9854 438.8755 314.8555 439.1997 C
314.9375 439.8472 315.1875 440.8154 315.0723 441.396 C
f
304.8516 418.4873 m
304.584 418.332 302.2686 419.2148 302.5391 418.9688 C
301.9902 419.5625 302.8867 419.7637 300.8457 420.5288 C
300.3496 420.4775 L
300.2861 420.4189 300.1064 420.3281 299.9229 420.5825 C
299.9033 420.8901 300.3076 420.8447 300.4355 421.2275 C
301.166 422.873 300.7646 424.1465 300.6934 425.8506 C
301.2334 427.2476 L
302.2578 428.4834 302.2559 428.6602 302.9512 429.3315 C
303.6465 430.3086 303.791 430.3833 304.7227 431.186 c
304.875 431.3169 305.1563 431.4214 305.3379 431.2666 C
305.7773 430.9238 305.8008 430.6992 305.9297 430.2603 C
306.1484 428.6309 305.1641 427.5151 303.9766 426.6348 C
303.1328 425.9072 302.3311 424.7778 302.5117 423.6675 C
302.585 423.5923 L
302.9697 423.9165 303.4541 424.1064 303.6172 424.5078 C
304.2598 425.9419 305.9883 426.5947 306.9561 427.8384 C
307.377 428.585 307.1191 429.8804 306.9561 430.7417 C
306.9512 430.7178 308.2246 431.3438 307.8789 431.1191 C
308.4844 430.8701 308.4092 430.4365 308.7012 429.8833 C
309.2686 428.4458 309.2207 427.1484 308.3428 425.9043 C
305.9297 422.8945 L
305.8916 421.3608 306.3145 419.3867 304.8516 418.4873 c
f
308.0352 433.0532 m
307.4541 432.7861 306.8574 432.7275 306.2148 433.0239 C
306.0518 433.2461 305.5225 433.4258 305.7314 433.752 c
306.1973 434.5063 306.9854 435.1299 307.4707 435.8711 C
307.6943 435.9912 L
308.6768 437.1768 310.2236 438.1694 311.6895 439.0605 C
312.5762 439.4458 L
312.7686 439.6382 313.2207 440.0396 313.3965 439.625 C
313.4287 438.0811 312.7764 436.4302 311.3047 435.3384 c
310.4102 434.6777 310.0283 434.8062 309.2314 434.7578 C
308.8213 434.0166 L
308.7246 433.6475 308.4043 433.2754 308.0352 433.0532 C
f
299.9111 424.2427 m
299.8721 423.1509 L
299.7725 422.1558 299.3125 421.0078 298.376 420.4521 C
297.8164 420.585 298.0171 421.2568 297.8779 421.7144 C
298.2368 422.7095 298.9355 423.5337 299.5137 424.4141 C
299.5908 424.4727 299.6709 424.5103 299.751 424.4727 C
299.9111 424.2427 L
f
286.5815 386.2832 m
286.1909 385.8818 285.9717 386.0693 285.5757 386.0322 C
284.4492 386.3379 283.7832 386.8271 283.4644 388.1025 c
283.0522 389.8818 283.0659 391.8389 283.4644 393.6543 C
283.6465 393.7969 L
284.4385 393.8877 285.6372 394.0479 285.9634 393.8691 c
286.2876 393.6895 285.6128 390.4893 Y
285.5918 389.8555 285.9023 388.2314 286.1909 387.3887 C
286.2524 387.2637 286.8999 386.6133 286.5815 386.2832 c
f
294.7559 388.2607 m
294.6353 387.1191 293.2012 386.1123 292.5 385.9092 c
291.7964 385.709 289.6963 385.8076 289.0913 386.0156 c
288.4893 386.2246 287.0151 389.1035 287.1865 390.5996 C
287.1865 391.833 287.5186 393.791 288.0132 393.9492 c
288.5083 394.1045 289.8188 394.0244 Y
290.3677 394.0615 290.7822 393.9307 291.2642 393.875 C
291.6064 393.7432 291.3657 393.3125 291.4858 393.0684 C
291.6411 392.4316 291.6763 391.7422 292.0718 391.1055 C
292.623 390.0371 293.6372 389.4014 294.6353 389.0264 C
294.8604 388.8203 294.7368 388.542 294.7559 388.2607 C
f
293.145 393.0928 m
293.145 393.3232 293.1582 393.417 293.3325 393.4922 C
294.2793 393.4922 L
295.1196 393.4629 296.2007 393.1875 296.9873 394 C
297.4395 393.9844 297.4795 393.4463 297.5996 393.0313 C
297.707 392.4512 297.6802 392.082 297.6802 391.5605 C
297.4927 391.1475 297.2817 390.5186 296.8535 390.2568 C
296.1738 389.9355 295.4912 389.998 294.8389 390.2568 C
293.8516 390.8398 293.1318 391.7734 293.145 393.0928 c
f
312.5293 397.6123 m
311.2646 393.2275 310.6621 390.9658 312.6367 386.4473 C
312.6563 386.2754 312.8457 385.7168 312.6367 385.6416 C
310.4531 386.0801 309.873 386.2676 307.8232 386.4199 C
305.9297 386.7471 302.7832 386.2188 300.6768 386.2383 C
299.0313 386.1816 297.3647 386.126 295.6411 385.915 C
295.125 386.1816 295.5259 386.7568 295.5664 387.1396 C
295.7563 387.7344 295.7749 388.0391 295.834 388.7285 C
296.1016 389.0146 296.4282 388.8633 296.752 388.9971 C
297.8618 389.168 298.8018 390.1445 299.0684 391.1807 C
299.4141 392.2686 299.0313 393.4756 298.5332 394.5107 C
298.437 394.8164 298.0171 395.0469 298.1885 395.3516 c
299.5479 397.8984 298.5898 400.4834 298.1323 402.9717 C
297.6533 404.7354 296.9258 406.6855 296.6367 408.5449 C
296.6953 408.7354 296.4468 409.1768 296.8667 409.2139 C
297.022 409.1768 L
298.4746 407.4131 302.6406 403.6846 304.2012 402.4736 c
305.7607 401.2627 309.79 398.9121 312.4121 398.2813 C
312.6611 398.0732 312.623 397.8984 312.5293 397.6123 C
f
*U
U
323.5938 435.7295 m
323.8604 435.3843 324.0352 435.0791 323.8232 434.7524 c
323.3262 434.7148 323.248 435.3467 322.8281 435.5581 c
322.1387 435.9004 321.5254 435.5366 320.8379 435.3652 c
319.0957 434.6187 317.6396 433.1255 315.9551 432.3418 c
315.7461 432.3418 315.5527 432.3608 315.4189 432.5132 c
315.7061 432.7993 316.165 432.8584 316.5293 433.0884 c
318.2725 434.2363 319.957 436.0342 322.1387 436.3608 c
322.7139 436.3979 323.2305 436.1895 323.5938 435.7295 c
f
*u
1 D
323.46 432.7808 m
323.3262 433.2031 323.3447 433.8911 322.8281 433.9873 C
322.7139 433.7197 322.8281 433.4307 322.7139 433.1821 C
322.5605 432.9922 322.293 432.7622 321.9854 432.8394 C
319.8789 432.7056 318.3096 430.8462 316.5107 429.8911 c
315.8984 429.5459 315.208 429.3535 314.5586 429.1816 C
314.499 429.0854 314.5205 428.9517 314.6143 428.8955 C
316.6074 428.6841 318.5771 428.4917 320.5518 428.2832 C
322.75 428.5317 L
322.8096 428.8184 322.4648 429.0669 322.5205 429.3936 C
322.7725 430.292 322.8477 431.269 322.5977 432.1118 C
322.7725 432.5693 323.4229 432.2266 323.46 432.7808 C
f
0 D
321.9219 429.3799 m
321.6514 428.981 321.2227 429.3291 320.8457 429.2813 C
319.9844 429.3799 318.5283 429.1792 317.5781 429.2969 C
317.4346 429.3799 317.3271 429.5298 317.415 429.6636 C
317.5605 429.8989 317.9561 429.915 318.207 430.0996 C
319.248 430.7495 320.3418 431.3682 321.5273 431.6514 C
321.7422 431.6836 321.9219 431.5015 321.959 431.3516 c
322.1006 430.8008 322.0117 429.915 321.9219 429.3799 C
f
*U
*u
324.5732 422.9111 m
324.6436 423.0112 324.7227 423.125 324.8174 423.1343 C
324.9434 423.0879 325.0088 423.0288 325.0264 422.7983 C
325.0107 422.4287 324.916 422.0405 324.8164 421.6289 c
324.7021 421.1606 324.5859 420.6816 324.5859 420.2129 c
324.5859 420.0039 324.6094 419.7979 324.665 419.5957 C
324.9424 419.251 325.3691 419.1729 325.8818 419.3486 C
325.8916 419.3525 326.7539 419.8477 Y
327.5039 420.2969 328.2129 420.7197 329.5264 421.0542 c
329.5586 421.0625 329.5654 421.0522 329.5703 421.0464 c
329.5908 421.0225 329.6006 420.9736 329.6006 420.9116 c
329.6006 420.7993 329.5674 420.6455 329.5137 420.5205 C
329.4639 420.498 328.249 419.9561 Y
327.2939 419.5391 326.3057 419.1064 325.3789 418.5762 C
325.1055 418.5195 324.8525 418.668 324.6074 418.8105 C
324.5479 418.8457 L
324.1953 419.3281 324.082 419.7949 324.082 420.2617 c
324.082 420.6812 324.1729 421.1001 324.2676 421.5303 c
324.3555 421.9307 324.4434 422.3452 324.4648 422.7798 C
324.4941 422.8164 324.5732 422.9111 Y
f
*U
294.7427 423.3032 m
295.4326 421.8882 294.7046 420.5479 294.7427 419.0732 c
294.8574 418.6533 295.6816 418.5938 295.4326 418.0967 c
295.2397 417.9629 294.9722 417.9258 294.7612 418.0781 c
294.3784 418.3271 294.2446 418.5166 294.1484 418.959 c
294.0522 420.2588 295.0874 421.7734 294.167 422.9985 c
293.8994 423.2661 293.5171 423.5337 293.1343 423.5522 c
292.3101 423.3999 291.8901 422.5195 291.604 421.8696 c
291.1626 420.1465 291.0474 418.3271 292.5591 416.9492 c
293.4419 416.4326 294.5122 415.876 294.5708 414.7656 c
294.7046 414.5732 294.9722 414.3828 295.1836 414.498 c
295.4512 414.5166 295.4888 415.2822 295.8716 414.9189 c
295.9863 414.6504 l
295.8901 414.3457 295.7964 413.8076 295.2988 413.7891 c
295.0498 413.7324 294.7798 413.8672 294.5708 414.0186 c
294.0332 414.5732 294.4561 415.416 293.5542 415.7793 c
292.0615 416.2402 291.085 417.8105 290.9321 419.2852 c
290.8359 420.7002 290.8945 422.252 292.1201 423.4961 c
292.5991 423.8604 293.231 424.0903 293.8433 423.8975 c
294.1885 423.8413 294.5898 423.5923 294.7427 423.3032 c
f
u
u
*u
1 D
1 XR
276.0254 412.9492 m
273.2993 411.6846 272.4673 408.4385 272.4321 408.2998 C
272.3599 408.0137 L
272.6411 407.917 L
272.748 407.8818 275.2793 407.0527 278.3667 408.5693 c
281.4814 410.0977 282.1206 413.1807 282.1475 413.3105 C
282.2114 413.6377 L
281.8823 413.6904 L
281.7539 413.7129 278.7012 414.1914 276.0254 412.9492 c
f
0 D
276.2959 412.3643 m
278.2866 413.2871 280.561 413.1807 281.417 413.0977 C
281.1733 412.3076 280.3472 410.2578 278.083 409.1475 c
275.8115 408.0352 273.8662 408.2998 273.1548 408.4551 C
273.417 409.2422 274.2969 411.4355 276.2959 412.3643 C
f
*U
*u
1 D
278.7427 419.0693 m
276.0112 417.8359 275.0024 414.6201 274.9624 414.4844 C
274.8687 414.1768 L
275.1738 414.082 L
275.2808 414.0479 277.8037 413.2959 280.9023 414.7783 c
284.0298 416.2734 284.6934 419.252 284.7202 419.377 C
284.7871 419.7041 L
284.4609 419.7627 L
284.3379 419.7842 281.4292 420.2822 278.7427 419.0693 c
f
0 D
279.0078 418.4814 m
280.9907 419.377 283.1548 419.2617 283.9849 419.1738 C
283.73 418.4043 282.8848 416.4395 280.624 415.3594 c
278.3711 414.2832 276.439 414.4863 275.7007 414.625 C
276.0142 415.4277 277.0117 417.5801 279.0078 418.4814 C
f
*U
*u
1 D
282.29 424.9629 m
279.5562 423.7617 278.3706 420.5776 278.3223 420.4414 C
278.2021 420.1143 L
278.5366 420.0215 L
278.6436 419.9922 281.1611 419.3145 284.2651 420.7622 c
287.4063 422.2231 288.0938 425.0967 288.123 425.2202 C
288.1953 425.5439 L
287.8691 425.6079 L
287.7539 425.6318 284.9902 426.1509 282.29 424.9629 c
f
0 D
282.5498 424.3716 m
284.5244 425.2412 286.5791 425.1182 287.3848 425.0244 C
287.1172 424.2725 286.2529 422.397 283.9946 421.3457 c
281.7656 420.3105 279.8501 420.4521 279.0796 420.5723 C
279.4492 421.3887 280.5566 423.4966 282.5498 424.3716 C
f
*U
*u
1 D
285.8135 430.7847 m
283.0767 429.6128 281.7173 426.458 281.6611 426.3271 C
281.5142 425.9795 L
281.8804 425.8882 L
281.9849 425.8613 284.4946 425.2593 287.6089 426.6719 c
290.7612 428.1011 291.4727 430.8701 291.5024 430.9878 C
291.5825 431.3115 L
291.2559 431.3813 L
291.1465 431.4053 288.5298 431.9434 285.8135 430.7847 c
f
0 D
286.0679 430.1904 m
288.0371 431.0308 289.9824 430.9023 290.7583 430.8062 C
290.48 430.0728 289.5972 428.2803 287.3413 427.2583 c
285.1367 426.2603 283.2344 426.3457 282.437 426.4478 C
282.8628 427.2793 284.0825 429.3423 286.0679 430.1904 C
f
*U
*u
1 D
290.6914 436.6094 m
287.9463 435.4697 286.416 432.3442 286.3516 432.2134 C
286.1724 431.8442 L
286.5708 431.7588 L
286.6777 431.7344 289.1797 431.21 292.3022 432.5854 c
295.4673 433.9819 296.2031 436.647 296.2324 436.7593 C
296.3184 437.0806 L
295.9946 437.1582 L
295.8931 437.1821 293.418 437.7412 290.6914 436.6094 c
f
0 D
290.9375 436.0127 m
292.896 436.8262 294.7368 436.6924 295.4858 436.5879 C
295.1943 435.8765 294.293 434.1694 292.0425 433.1768 c
289.8457 432.208 287.9648 432.248 287.1489 432.3286 C
287.6387 433.1738 288.9604 435.1914 290.9375 436.0127 C
f
*U
*u
1 D
296.0669 442.2285 m
293.3188 441.1206 291.6118 438.0249 291.5396 437.894 C
291.3311 437.5059 L
291.7646 437.4229 L
291.8687 437.4043 294.3652 436.9521 297.4927 438.2954 c
300.6738 439.6597 301.4346 442.2202 301.4639 442.3271 C
301.5547 442.646 L
301.2354 442.7285 L
301.1367 442.7529 298.8066 443.3335 296.0669 442.2285 c
f
0 D
296.3076 441.6318 m
298.2529 442.4155 299.9893 442.2788 300.7109 442.1694 C
300.4063 441.4766 299.4863 439.8496 297.2388 438.8892 c
295.063 437.9551 293.2012 437.9473 292.3638 438.0063 C
292.9121 438.8652 294.3384 440.8369 296.3076 441.6318 C
f
*U
*u
1 D
301.8057 447.542 m
299.0527 446.4639 297.1743 443.3975 297.0967 443.2661 C
296.8481 442.8569 L
297.3218 442.7822 L
297.4263 442.7661 299.915 442.3887 303.0498 443.6973 c
306.2422 445.0273 307.0264 447.4805 307.0586 447.5845 C
307.1543 447.9009 L
306.8389 447.9888 L
306.748 448.0156 304.5625 448.6201 301.8057 447.542 c
f
0 D
302.041 446.9404 m
303.9707 447.6943 305.6074 447.5552 306.3018 447.4434 C
305.9824 446.7715 305.0439 445.2251 302.8018 444.291 c
300.6582 443.3975 298.8096 443.3384 297.9453 443.376 C
298.5605 444.2485 300.0889 446.1748 302.041 446.9404 C
f
*U
*u
1 D
307.7773 452.4438 m
305.0166 451.395 302.9668 448.3584 302.8809 448.2295 C
302.5918 447.7964 L
303.1094 447.729 L
303.2139 447.7163 305.6934 447.416 308.8379 448.6899 c
312.043 449.9878 312.8516 452.334 312.8828 452.4355 C
312.9844 452.7437 L
312.6738 452.8423 L
312.5889 452.8691 310.5479 453.4956 307.7773 452.4438 c
f
0 D
308.0078 451.8418 m
309.9189 452.5669 311.457 452.4253 312.1211 452.3071 C
311.7891 451.6572 310.8281 450.1909 308.5967 449.2866 c
306.4697 448.4277 304.6445 448.3262 303.7617 448.3418 C
304.4414 449.2222 306.0605 451.103 308.0078 451.8418 C
f
*U
*u
1 D
313.8438 456.8374 m
311.0771 455.8174 308.8564 452.8076 308.7617 452.6792 C
308.4316 452.2246 L
308.9902 452.168 L
309.0938 452.1577 311.5693 451.9326 314.7207 453.1714 c
317.9375 454.4341 318.7695 456.6768 318.8047 456.7729 C
318.9111 457.0781 L
318.6064 457.1851 L
318.5283 457.2144 316.6279 457.8623 313.8438 456.8374 c
f
0 D
314.0654 456.2324 m
315.957 456.9282 317.4023 456.7861 318.0361 456.6631 C
317.6875 456.0371 316.7119 454.6455 314.4834 453.771 c
312.3857 452.9468 310.585 452.8047 309.6807 452.7969 C
310.4238 453.6855 312.1309 455.5181 314.0654 456.2324 C
f
*U
U
u
*u
1 D
271.6655 419.1133 m
271.5845 419.0098 269.6904 416.5508 269.4951 413.5908 c
269.2998 410.5781 271.7642 408.2773 271.8711 408.1816 C
272.0874 407.9805 L
272.3071 408.1816 L
272.3901 408.2559 274.3408 410.0859 274.4907 413.543 c
274.6431 417.0234 272.2271 419.0762 272.125 419.1611 C
271.8687 419.376 L
271.6655 419.1133 L
f
0 D
270.1318 413.2539 m
270.1318 413.3525 270.1348 413.4492 270.1401 413.5479 c
270.2847 415.7637 271.4829 417.7168 271.9648 418.4199 C
272.5239 417.8457 273.854 416.2295 273.854 413.8477 c
273.854 413.7568 273.8511 413.6631 273.8457 413.5693 c
273.7358 411.0303 272.564 409.4385 272.0825 408.8867 C
271.5366 409.4707 270.1318 411.1729 270.1318 413.2539 C
f
*U
*u
1 D
275.5098 425.7441 m
275.4458 425.6714 273.9048 423.9727 273.2466 421.5293 c
273.1582 421.1982 273.0884 420.8423 273.0454 420.4756 c
272.6899 417.5537 274.8008 415.1592 274.8921 415.0576 C
275.1006 414.8242 L
275.3413 415.0273 L
275.4243 415.0996 277.4175 416.8281 277.8218 420.1836 c
278.2285 423.5767 276.0615 425.6714 275.9702 425.7598 C
275.7319 425.9849 L
275.5098 425.7441 L
f
0 D
273.6504 419.8174 m
273.6504 420.0068 273.6611 420.2021 273.6851 420.3975 c
273.7251 420.7354 273.7871 421.0586 273.8696 421.3608 c
274.3408 423.1113 275.3174 424.478 275.7563 425.0322 C
276.2188 424.481 277.2275 423.0493 277.2275 421.0078 c
277.2275 420.7671 277.2114 420.5186 277.1821 420.2607 c
276.8877 417.8154 275.6704 416.2988 275.1597 415.7559 C
274.7046 416.3574 273.6504 417.9443 273.6504 419.8174 C
f
*U
*u
1 D
279.8203 431.9619 m
279.751 431.8979 278.1348 430.3911 277.313 427.9648 c
277.209 427.6567 277.1235 427.3223 277.0566 426.9453 c
276.543 424.1196 278.3003 421.6338 278.3755 421.5269 C
278.5708 421.2539 L
278.8359 421.4629 L
278.9214 421.5293 280.9575 423.1563 281.6133 426.4126 c
282.2769 429.7119 280.3579 431.8521 280.2754 431.9404 C
280.0586 432.1812 L
279.8203 431.9619 L
f
0 D
277.6104 425.9043 m
277.6104 426.2065 277.6343 426.52 277.6934 426.833 c
277.7544 427.1777 277.8296 427.4805 277.9233 427.7588 c
278.5068 429.4814 279.5425 430.7285 280.0103 431.2344 C
280.3794 430.7124 281.105 429.4707 281.105 427.7637 c
281.105 427.3784 281.0669 426.9692 280.979 426.5386 c
280.5078 424.1919 279.2476 422.75 278.7021 422.2148 C
278.3433 422.8223 277.6104 424.2559 277.6104 425.9043 C
f
*U
*u
1 D
284.5591 437.7734 m
284.4868 437.7173 282.7959 436.4033 281.8057 433.9956 c
281.688 433.7119 281.5889 433.3906 281.4951 433.0132 c
280.8315 430.2813 282.2261 427.7075 282.2847 427.5977 C
282.4609 427.2793 L
282.7559 427.4937 L
282.8438 427.5552 284.9204 429.0801 285.8271 432.2349 c
286.7476 435.4375 285.0806 437.6235 285.0083 437.7144 C
284.813 437.9663 L
284.5591 437.7734 L
f
0 D
281.9663 431.4937 m
281.9663 431.938 282.0117 432.4009 282.124 432.8608 c
282.207 433.2061 282.2983 433.498 282.4023 433.752 c
283.0981 435.4429 284.187 436.5718 284.6846 437.0293 C
284.9604 436.5586 285.4526 435.5259 285.4526 434.1294 c
285.4526 433.605 285.3833 433.0269 285.2061 432.4141 c
284.5615 430.1694 283.2642 428.7993 282.6807 428.2695 C
282.4238 428.853 281.9663 430.0835 281.9663 431.4937 C
f
*U
*u
1 D
289.6909 443.1836 m
289.6157 443.1382 287.8579 442.0171 286.6914 439.6274 c
286.5605 439.3574 286.4424 439.0576 286.3276 438.6831 c
285.5088 436.0449 286.5444 433.3853 286.5898 433.2729 C
286.7368 432.9063 L
287.0688 433.123 L
287.1567 433.1846 289.2734 434.6079 290.4292 437.6582 c
291.6064 440.7646 290.1938 442.9937 290.1323 443.0869 C
289.958 443.3521 L
289.6909 443.1836 L
f
0 D
286.6616 436.5239 m
286.6616 437.1528 286.7368 437.8271 286.9429 438.4902 c
287.0503 438.833 287.1538 439.106 287.269 439.3438 c
288.0854 441.0107 289.228 442.0273 289.7495 442.4346 C
289.9478 442.0249 290.25 441.2197 290.25 440.1309 c
290.25 439.4722 290.1401 438.7153 289.8242 437.8887 c
289.0166 435.7505 287.6787 434.4478 287.0527 433.9258 C
286.8975 434.4478 286.6616 435.4082 286.6616 436.5239 C
f
*U
*u
1 D
295.1836 448.2002 m
295.106 448.1626 293.2842 447.2344 291.9355 444.8638 c
291.791 444.6094 291.6572 444.3208 291.5181 443.9595 c
290.5444 441.4175 291.2295 438.6753 291.2588 438.5601 C
291.3657 438.1401 L
291.7378 438.3647 L
291.8286 438.418 293.9849 439.7427 295.3872 442.6914 c
296.8188 445.6987 295.6626 447.9678 295.6118 448.061 C
295.4648 448.3418 L
295.1836 448.2002 L
f
0 D
291.6465 440.9199 m
291.6465 441.7734 291.7563 442.7769 292.1201 443.729 c
292.2485 444.0586 292.3662 444.3179 292.4976 444.5454 c
293.4287 446.1826 294.6191 447.0874 295.1704 447.4434 C
295.291 447.106 295.457 446.5225 295.457 445.7197 c
295.457 444.9546 295.3042 444.0127 294.8066 442.9697 c
293.8325 440.9229 292.4521 439.6997 291.791 439.1914 C
291.7241 439.5874 291.6465 440.1978 291.6465 440.9199 C
f
*U
*u
1 D
301.0146 452.8291 m
300.9336 452.7969 299.0557 452.0586 297.5171 449.7173 c
297.3564 449.4712 297.2036 449.1875 297.0459 448.8506 c
295.9199 446.4048 296.2515 443.5796 296.2671 443.4619 C
296.3237 442.9907 L
296.7407 443.2183 L
296.835 443.269 299.0293 444.4922 300.6816 447.3389 c
302.3652 450.2441 301.4668 452.5508 301.4287 452.6475 C
301.3086 452.9414 L
301.0146 452.8291 L
f
0 D
296.8589 444.5718 m
296.8589 445.5811 296.9819 447.1699 297.6318 448.5801 c
297.7764 448.8906 297.9155 449.1445 298.0576 449.3613 c
299.1113 450.9697 300.3496 451.7671 300.9229 452.0718 C
300.9844 451.8149 301.0488 451.4326 301.0488 450.9268 c
301.0488 450.0786 300.8594 448.9307 300.123 447.6621 c
298.9912 445.709 297.5732 444.5615 296.8696 444.0693 C
296.8643 444.2163 296.8589 444.3794 296.8589 444.5718 C
f
*U
*u
1 D
307.1543 457.0752 m
307.0742 457.0513 305.1396 456.5 303.4111 454.1855 c
303.2295 453.9448 303.0586 453.6719 302.8867 453.3618 c
301.6025 451.0122 301.5898 448.104 301.5898 447.9805 C
301.5918 447.4644 L
302.0557 447.6919 L
302.1514 447.7402 304.3857 448.8638 306.2822 451.6089 c
308.2188 454.4102 307.5801 456.7544 307.5508 456.8506 C
307.4629 457.1582 L
307.1543 457.0752 L
f
0 D
303.4541 453.0508 m
303.6094 453.3374 303.7646 453.5811 303.9277 453.8003 c
305.1055 455.3765 306.3945 456.0693 306.9893 456.3232 C
307.0068 456.1733 307.0234 455.9917 307.0234 455.7588 c
307.0234 454.8945 306.8125 453.5088 305.752 451.9756 c
304.4648 450.1157 303.0068 449.0376 302.2637 448.564 C
302.333 449.5083 302.5732 451.4458 303.4541 453.0508 C
f
*U
*u
1 D
313.5518 460.9419 m
313.4688 460.9282 311.4863 460.5591 309.5605 458.2822 c
307.6436 456.021 307.1943 452.2832 307.1758 452.1255 C
307.1113 451.5659 L
307.625 451.7939 L
307.7217 451.8364 309.998 452.8613 312.1426 455.5073 c
314.3252 458.2046 313.9424 460.5806 313.9268 460.6792 C
313.8701 460.9976 L
313.5518 460.9419 L
f
0 D
310.0518 457.8647 m
311.3574 459.4082 312.6953 459.9995 313.3105 460.2061 C
313.3145 460.1899 313.3145 460.1816 313.3145 460.1631 c
313.3145 459.4194 313.1211 457.7417 311.6387 455.9116 c
310.2051 454.1401 308.6982 453.1313 307.917 452.6792 C
308.125 453.8271 308.7109 456.2832 310.0518 457.8647 C
f
*U
U
U
*u
1 D
252.2935 428.9438 m
252.2935 413.3418 260.7378 398.332 274.3325 389.7676 C
274.8945 389.4141 L
275.2988 389.9414 L
275.4136 390.0918 275.4595 390.2324 275.4595 390.3643 c
275.4595 390.6982 275.1729 390.9609 275.0122 391.1104 C
274.2256 391.8652 L
271.4243 395.0469 270.6729 398.0645 270.6729 400.3848 c
270.6729 402.9502 271.5898 404.6621 271.6655 404.7939 C
271.9165 405.2461 L
271.5713 405.6338 L
265.8267 412.042 262.793 420.1016 262.793 428.9438 c
262.793 448.4009 278.6216 464.23 298.0791 464.23 c
303.4893 464.23 308.6797 463.0391 313.5059 460.6899 C
314.0059 460.4468 L
321.0996 468.5376 L
320.3125 468.9766 L
313.5518 472.7412 305.8623 474.729 298.0791 474.729 c
272.832 474.729 252.2935 454.188 252.2935 428.9438 c
f
0 D
253.749 428.9438 m
253.749 453.3857 273.6343 473.2734 298.0791 473.2734 c
305.3105 473.2734 312.4492 471.481 318.7959 468.1201 C
317.8682 467.0605 314.1973 462.873 313.6318 462.2314 C
308.752 464.5161 303.5234 465.6855 298.0791 465.6855 c
277.8188 465.6855 261.3345 449.2036 261.3345 428.9438 c
261.3345 419.9053 264.4009 411.6602 270.1777 405.04 C
269.8457 404.2725 269.2544 402.5889 269.2544 400.3604 c
269.2544 398.5166 269.6826 396.3047 270.98 393.9521 C
260.2534 402.498 253.749 415.4902 253.749 428.9438 C
f
*U
314.1396 461.9985 m
309.1133 464.4468 303.7109 465.6855 298.0791 465.6855 c
277.8188 465.6855 261.3345 449.2036 261.3345 428.9438 c
261.3345 419.7363 264.5 411.3408 270.4878 404.6621 C
271.1167 403.9609 L
273.9102 408.1836 L
273.7612 408.3564 L
273.5112 408.3857 273.3042 408.4219 273.1548 408.4551 C
273.1934 408.5703 273.2476 408.7207 273.3149 408.8896 C
273.0952 409.1514 272.875 409.4131 272.666 409.6807 C
272.4404 409.3213 272.229 409.0557 272.0825 408.8867 C
271.5366 409.4707 270.1318 411.1729 270.1318 413.2539 c
270.1318 413.3213 270.1348 413.3867 270.1377 413.4531 C
267.5239 418.0547 266.1987 423.2407 266.1987 428.9438 c
266.1987 446.5225 280.5 460.8237 298.0791 460.8237 c
302.3945 460.8237 306.5557 459.9839 310.4707 458.3247 C
310.8896 458.7583 311.3037 459.1001 311.6875 459.3677 C
307.4023 461.2896 302.834 462.2793 298.0791 462.2793 c
279.6973 462.2793 264.7407 447.3252 264.7407 428.9438 c
264.7407 420.9731 267.2285 413.9658 272.1011 408.0898 C
271.8174 407.6592 271.4214 407.0596 270.9668 406.375 C
265.6313 412.6602 262.793 420.4297 262.793 428.9438 c
262.793 448.4009 278.6216 464.23 298.0791 464.23 c
303.248 464.23 308.2109 463.1304 312.8535 460.9844 C
312.6602 460.5635 312.4697 460.1514 312.2793 459.7388 C
312.7051 459.979 313.0654 460.1235 313.3105 460.2061 C
313.3145 460.1899 313.3145 460.1816 313.3145 460.1631 c
313.3145 459.6206 313.209 458.5811 312.5781 457.3481 C
312.7441 457.2676 L
314.7832 461.688 L
314.1396 461.9985 L
f
u
0 XR
313.8145 469.2007 m
310.3018 464.7583 L
310.623 464.6479 310.9434 464.5332 311.2627 464.4141 C
314.75 468.8242 L
314.4395 468.9536 314.127 469.0786 313.8145 469.2007 C
f
306.9375 471.2471 m
304.8906 466.1748 L
305.2139 466.1157 305.5352 466.0527 305.8564 465.9854 C
307.8965 471.0371 L
307.5781 471.1118 307.2578 471.1797 306.9375 471.2471 C
f
298.7607 472.1611 m
298.2573 466.7852 L
298.5811 466.7837 298.9043 466.7788 299.2275 466.769 C
299.7305 472.1353 L
299.4072 472.1475 299.084 472.1563 298.7607 472.1611 C
f
290.7925 471.5537 m
291.814 466.2661 L
292.1318 466.3193 292.4507 466.3687 292.771 466.4136 C
291.748 471.7061 L
291.4282 471.6592 291.1099 471.6079 290.7925 471.5537 C
f
283.0601 469.479 m
285.4775 464.6279 L
285.7842 464.7363 286.0928 464.8413 286.4028 464.9419 C
283.978 469.8076 L
283.6704 469.7012 283.3643 469.5918 283.0601 469.479 C
f
275.7256 465.9312 m
279.3345 461.8101 L
279.6206 461.9741 279.9092 462.1333 280.1997 462.29 C
276.5718 466.4321 L
276.2876 466.2681 276.0059 466.1011 275.7256 465.9312 C
f
269.0615 460.9585 m
273.6167 457.7939 L
273.8726 458.0107 274.1313 458.2246 274.3921 458.4351 C
269.8071 461.6196 L
269.5562 461.4023 269.3076 461.1816 269.0615 460.9585 C
f
263.3926 454.7139 m
268.626 452.6777 L
268.8394 452.9424 269.0566 453.2041 269.2769 453.4624 C
264.0034 455.5146 L
263.7969 455.25 263.5933 454.9834 263.3926 454.7139 C
f
259.0142 447.4443 m
264.646 446.6592 L
264.8081 446.9639 264.9741 447.2666 265.144 447.5664 C
259.4624 448.3584 L
259.3091 448.0557 259.1597 447.751 259.0142 447.4443 C
f
256.147 439.4678 m
261.8887 440.0171 L
261.9922 440.353 262.0986 440.688 262.2109 441.02 C
256.4106 440.4653 L
256.3188 440.1343 256.231 439.8018 256.147 439.4678 C
f
254.9033 431.1128 m
260.4575 433.0435 L
260.4966 433.4019 260.5405 433.7588 260.5894 434.1143 C
254.9683 432.1602 L
254.9429 431.812 254.9204 431.4629 254.9033 431.1128 C
f
255.3335 422.6758 m
260.3511 425.9702 L
260.3232 426.3394 260.2979 426.709 260.2808 427.0811 C
255.1841 423.7339 L
255.2295 423.3804 255.2793 423.0278 255.3335 422.6758 C
f
257.4727 414.4189 m
261.5464 418.9053 L
261.4453 419.2793 261.3545 419.6563 261.2651 420.0342 C
257.1064 415.4551 L
257.2241 415.1074 257.3462 414.7637 257.4727 414.4189 C
f
261.3047 406.5293 m
264.186 412.0107 L
264.0059 412.3672 263.8262 412.7236 263.6582 413.0859 C
260.7236 407.5029 L
260.9131 407.1768 261.1064 406.8516 261.3047 406.5293 C
f
266.2134 399.9551 m
267.7534 406.3057 L
267.4985 406.6416 267.2485 406.9805 267.0054 407.3232 C
265.4346 400.8438 L
265.6904 400.5439 265.9502 400.248 266.2134 399.9551 C
f
U
313.0938 456.9487 m
313.2275 456.8604 313.3594 456.7729 313.4883 456.6855 C
313.6064 456.7378 313.7227 456.793 313.8438 456.8374 c
313.9854 456.8896 314.125 456.9346 314.2617 456.979 C
313.9639 457.1753 313.6855 457.395 313.4189 457.6279 C
313.3271 457.4082 313.2178 457.1816 313.0938 456.9487 C
f
U
u
u
u
*u
223.1704 367.3789 m
223.1704 367.582 L
224.9678 367.582 L
226.2383 363.1533 L
226.2563 363.1533 L
227.5811 367.582 L
229.374 367.582 L
229.374 367.3789 L
228.6895 367.3789 L
228.6895 361.7695 L
229.374 361.7695 L
229.374 361.5664 L
227.1216 361.5664 L
227.1216 361.7695 L
227.8154 361.7695 L
227.8154 367.2695 L
227.7974 367.2695 L
226.0488 361.5664 L
225.8149 361.5664 L
224.1299 367.2695 L
224.1118 367.2695 L
224.1118 361.7695 L
224.7876 361.7695 L
224.7876 361.5664 L
223.1704 361.5664 L
223.1704 361.7695 L
223.8462 361.7695 L
223.8462 367.3789 L
223.1704 367.3789 l
f
*U
*u
232.9502 364.0039 m
233.7422 366.4443 L
233.7603 366.4443 L
234.4985 364.0039 l
232.9502 364.0039 L
f
1 D
233.0044 361.5664 m
233.0044 361.7695 L
232.23 361.7695 L
232.8691 363.7539 L
234.5884 363.7539 L
235.2095 361.7695 L
234.4805 361.7695 L
234.4805 361.5664 L
236.749 361.5664 L
236.749 361.7695 L
236.1187 361.7695 L
234.2642 367.6602 L
233.9136 367.6602 L
231.96 361.7695 L
231.249 361.7695 L
231.249 361.5664 l
233.0044 361.5664 L
f
*U
*u
0 D
240.3545 361.5664 m
238.4966 361.5664 L
238.4966 361.7695 L
239.2544 361.7695 L
240.8413 364.4121 L
239.1279 367.3789 L
238.4966 367.3789 L
238.4966 367.582 L
240.8232 367.582 L
240.8232 367.3789 L
240.1558 367.3789 L
241.4272 365.2598 L
242.708 367.3789 L
241.9683 367.3789 L
241.9683 367.582 L
243.7539 367.582 L
243.7539 367.3789 L
243.0327 367.3789 L
241.5986 364.998 L
243.4834 361.7695 L
244.0874 361.7695 L
244.0874 361.5664 L
241.752 361.5664 L
241.752 361.7695 L
242.4731 361.7695 L
241.0127 364.1953 L
239.5698 361.7695 L
240.3545 361.7695 L
240.3545 361.5664 l
f
*U
*u
245.9761 363.209 m
245.9761 363.8145 L
248.1792 363.8145 L
248.1792 363.209 L
245.9761 363.209 l
f
*U
*u
251.6973 367.3789 m
251.9497 367.3789 l
253.1675 367.3789 253.7446 367.2793 253.7446 366.0195 c
253.7446 365.0195 253.4741 364.4883 252.0039 364.4883 C
251.6973 364.4883 l
251.6973 367.3789 L
f
1 D
250.1113 367.3789 m
250.8232 367.3789 L
250.8232 361.7695 L
250.0483 361.7695 L
250.0483 361.5664 L
252.5 361.5664 L
252.5 361.7695 L
251.6973 361.7695 L
251.6973 364.2852 L
252.1299 364.2852 l
254.0234 364.2852 254.6978 365.2451 254.6978 365.9834 c
254.6978 366.7764 254.1763 367.582 252.5088 367.582 C
250.1113 367.582 l
250.1113 367.3789 L
f
*U
*u
0 D
256.4087 361.5664 m
256.4087 361.7695 L
257.1475 361.7695 L
257.1475 367.3789 L
256.4087 367.3789 L
256.4087 367.582 L
258.8506 367.582 L
258.8506 367.3789 L
258.0215 367.3789 L
258.0215 361.7695 L
259.6343 361.7695 L
260.373 361.7695 260.7246 362.6719 260.8325 363.248 c
261.0039 363.248 L
260.9048 361.5664 L
256.4087 361.5664 l
f
*U
*u
1 D
264.251 364.0039 m
265.0435 366.4443 L
265.061 366.4443 L
265.7993 364.0039 l
264.251 364.0039 L
f
264.3052 361.5664 m
264.3052 361.7695 L
263.5308 361.7695 L
264.1699 363.7539 L
265.8892 363.7539 L
266.5103 361.7695 L
265.7813 361.7695 L
265.7813 361.5664 L
268.0498 361.5664 L
268.0498 361.7695 L
267.4194 361.7695 L
265.5654 367.6602 L
265.2144 367.6602 L
263.2612 361.7695 L
262.5498 361.7695 L
262.5498 361.5664 l
264.3052 361.5664 L
f
*U
*u
0 D
270.6558 367.3789 m
269.9526 367.3789 L
269.9526 367.582 L
271.7046 367.582 L
274.2627 363.2256 L
274.2808 363.2256 L
274.2808 367.3789 L
273.5781 367.3789 L
273.5781 367.582 L
275.2397 367.582 L
275.2397 367.3789 L
274.5464 367.3789 L
274.5464 361.4414 L
274.3159 361.4414 L
270.9395 367.1934 L
270.9214 367.1934 L
270.9214 361.7695 L
271.6147 361.7695 L
271.6147 361.5664 L
269.9526 361.5664 L
269.9526 361.7695 L
270.6558 361.7695 L
270.6558 367.3789 l
f
*U
*u
281.6831 365.9883 m
281.48 365.9766 L
281.2905 366.8301 280.8218 367.5039 279.8755 367.5039 c
279.2983 367.5039 278.8569 367.1094 278.6763 366.7764 c
278.3247 366.1211 278.3071 364.8447 278.3071 364.3506 c
278.3071 362.8057 278.4961 361.6914 279.9204 361.6914 c
280.7949 361.6914 281.3447 362.4189 281.5908 363.207 c
281.8071 363.207 L
281.8071 361.5664 L
281.564 361.5664 L
281.3105 361.9434 L
280.8853 361.585 280.3965 361.4414 279.8901 361.4414 c
278.2168 361.4414 277.2788 362.8857 277.2788 364.6113 c
277.2788 366.3809 278.6509 367.707 279.9263 367.707 c
280.4688 367.707 280.8218 367.54 281.2559 367.2344 c
281.5508 367.5195 L
281.6831 367.5039 L
281.6831 365.9883 l
f
*U
*u
287.3018 367.3789 m
287.3018 367.582 L
289.0957 367.582 L
289.0957 367.3789 L
288.4282 367.3789 L
286.3433 365.1289 L
289.0864 361.7695 L
289.5103 361.7695 L
289.5103 361.5664 L
287.2202 361.5664 L
287.2202 361.7695 L
287.9419 361.7695 L
285.6558 364.6982 L
285.6284 364.7432 285.6646 364.7871 285.728 364.8506 c
288.1128 367.3789 L
287.3018 367.3789 l
f
286.2617 361.5664 m
283.9976 361.5664 L
283.9976 361.7695 L
284.6914 361.7695 L
284.6914 367.3789 L
283.9976 367.3789 L
283.9976 367.582 L
286.2617 367.582 L
286.2617 367.3789 L
285.5654 367.3789 L
285.5654 361.7695 L
286.2617 361.7695 L
286.2617 361.5664 l
f
*U
*u
1 D
293.5 363.209 m
293.5 363.8145 L
291.2969 363.8145 L
291.2969 363.209 l
293.5 363.209 L
f
*U
*u
0 D
300.0488 367.5186 m
300.1895 367.5127 L
300.1895 365.9736 L
299.9863 365.9727 L
299.8066 366.8643 299.1572 367.5039 298.1519 367.5039 c
297.5732 367.5039 297.1304 367.1182 296.9497 366.7852 c
296.5972 366.1309 296.5791 364.8457 296.5791 364.3525 c
296.5791 362.8057 296.769 361.6445 298.1968 361.6445 c
299.4355 361.6445 299.498 362.4727 299.4707 363.4893 c
298.5947 363.4893 L
298.5947 363.7061 L
301.0361 363.7061 L
301.0361 363.4893 L
300.4863 363.4893 L
300.4238 362.4902 299.9932 361.4414 298.1606 361.4414 c
296.4888 361.4414 295.5508 362.8867 295.5508 364.6133 c
295.5508 366.3906 296.9224 367.707 298.1968 367.707 c
298.8301 367.707 299.3438 367.5215 299.7324 367.1719 C
300.0488 367.5186 l
f
*U
*u
302.6758 361.5664 m
302.6758 361.7695 L
303.4688 361.7695 L
303.4688 367.3789 L
302.6758 367.3789 L
302.6758 367.582 L
307.248 367.582 L
307.248 366.1182 L
307.0479 366.1182 L
306.8945 367.1895 306.3389 367.3789 305.5186 367.3789 c
304.3418 367.3789 L
304.3418 364.7852 L
305.2559 364.7852 305.5449 364.7939 305.6729 365.749 c
305.873 365.749 L
305.873 363.4707 L
305.6729 363.4707 L
305.6182 364.4395 305.2383 364.5576 304.3418 364.5664 c
304.3418 361.7695 L
305.4375 361.7695 L
306.626 361.7695 307.0205 361.915 307.2559 363.2539 c
307.4902 363.2539 L
307.373 361.5664 L
302.6758 361.5664 l
f
*U
*u
309.6475 361.5352 m
309.5225 361.5352 L
309.5225 363.0957 L
309.6924 363.0957 L
309.9355 362.2754 310.5566 361.6445 311.4258 361.6445 c
312.2021 361.6445 312.9434 362.1572 312.9434 362.9482 c
312.9434 363.4775 312.8174 363.7207 312.1221 363.999 c
311.7871 364.125 310.3867 364.584 310.251 364.6729 c
309.7285 364.9971 309.5225 365.5449 309.5225 366.0479 c
309.5225 366.416 309.6299 366.7314 309.8896 367.0732 c
310.1602 367.4229 310.6035 367.707 311.29 367.707 c
311.7061 367.707 312.2939 367.4502 312.4697 367.3184 c
312.8135 367.5811 L
312.9424 367.5684 L
312.9424 366.1699 L
312.7578 366.1699 L
312.5596 366.9189 312.0273 367.5039 311.2275 367.5039 c
310.6133 367.5039 309.9434 367.0811 309.9434 366.4043 c
309.9434 364.9092 313.3652 365.873 313.3652 363.4336 c
313.3652 362.2021 312.5928 361.4414 311.4121 361.4414 c
310.9082 361.4414 310.4043 361.5742 310.0342 361.9414 C
309.6475 361.5352 l
f
*U
*u
315.1904 361.5664 m
315.1904 361.7695 L
315.9834 361.7695 L
315.9834 367.3789 L
315.1904 367.3789 L
315.1904 367.582 L
319.7627 367.582 L
319.7627 366.1182 L
319.5625 366.1182 L
319.4102 367.1895 318.8535 367.3789 318.0332 367.3789 c
316.8564 367.3789 L
316.8564 364.7852 L
317.7715 364.7852 318.0605 364.7939 318.1875 365.749 c
318.3877 365.749 L
318.3877 363.4707 L
318.1875 363.4707 L
318.1328 364.4395 317.7529 364.5576 316.8564 364.5664 c
316.8564 361.7695 L
317.9521 361.7695 L
319.1406 361.7695 319.5352 361.915 319.7715 363.2539 c
320.0059 363.2539 L
319.8887 361.5664 L
315.1904 361.5664 l
f
*U
*u
322.002 361.5664 m
322.002 361.7695 L
322.7402 361.7695 L
322.7402 367.3789 L
322.002 367.3789 L
322.002 367.582 L
324.4434 367.582 L
324.4434 367.3789 L
323.6143 367.3789 L
323.6143 361.7695 L
325.2275 361.7695 L
325.9668 361.7695 326.3184 362.6719 326.4258 363.248 c
326.5977 363.248 L
326.498 361.5664 L
322.002 361.5664 l
f
*U
*u
328.2637 361.5664 m
328.2637 361.7695 L
329.0029 361.7695 L
329.0029 367.3789 L
328.2637 367.3789 L
328.2637 367.582 L
330.7061 367.582 L
330.7061 367.3789 L
329.877 367.3789 L
329.877 361.7695 L
331.4893 361.7695 L
332.2285 361.7695 332.5801 362.6719 332.6875 363.248 c
332.8594 363.248 L
332.7598 361.5664 L
328.2637 361.5664 l
f
*U
*u
334.6855 361.5352 m
334.5605 361.5352 L
334.5605 363.0957 L
334.7314 363.0957 L
334.9746 362.2754 335.5957 361.6445 336.4648 361.6445 c
337.2422 361.6445 337.9824 362.1572 337.9824 362.9482 c
337.9824 363.4775 337.8564 363.7207 337.1602 363.999 c
336.8262 364.125 335.4258 364.584 335.29 364.6729 c
334.7676 364.9971 334.5605 365.5449 334.5605 366.0479 c
334.5605 366.416 334.6689 366.7314 334.9297 367.0732 c
335.1992 367.4229 335.6426 367.707 336.3301 367.707 c
336.7451 367.707 337.332 367.4502 337.5088 367.3184 c
337.8525 367.5811 L
337.9814 367.5684 L
337.9814 366.1699 L
337.7969 366.1699 L
337.5986 366.9189 337.0674 367.5039 336.2656 367.5039 c
335.6523 367.5039 334.9824 367.0811 334.9824 366.4043 c
334.9824 364.9092 338.4043 365.873 338.4043 363.4336 c
338.4043 362.2021 337.6318 361.4414 336.4521 361.4414 c
335.9473 361.4414 335.4434 361.5742 335.0732 361.9414 C
334.6855 361.5352 l
f
*U
*u
344.7715 365.9883 m
344.5684 365.9766 L
344.3789 366.8301 343.9102 367.5039 342.9639 367.5039 c
342.3867 367.5039 341.9453 367.1094 341.7646 366.7764 c
341.4131 366.1211 341.3945 364.8447 341.3945 364.3506 c
341.3945 362.8057 341.585 361.6914 343.0088 361.6914 c
343.8828 361.6914 344.4336 362.4189 344.6797 363.207 c
344.8955 363.207 L
344.8955 361.5664 L
344.6523 361.5664 L
344.3984 361.9434 L
343.9736 361.585 343.4854 361.4414 342.9785 361.4414 c
341.3057 361.4414 340.3672 362.8857 340.3672 364.6113 c
340.3672 366.3809 341.7393 367.707 343.0146 367.707 c
343.5566 367.707 343.9102 367.54 344.3438 367.2344 c
344.6396 367.5195 L
344.7715 367.5039 L
344.7715 365.9883 l
f
*U
*u
351.2646 364.7988 m
351.2646 367.3789 L
350.5605 367.3789 L
350.5605 367.582 L
352.8408 367.582 L
352.8408 367.3789 L
352.1387 367.3789 L
352.1387 361.7695 L
352.8408 361.7695 L
352.8408 361.5664 L
350.5605 361.5664 L
350.5605 361.7695 L
351.2646 361.7695 L
351.2646 364.5361 L
348.6689 364.5361 L
348.6689 361.7695 L
349.3721 361.7695 L
349.3721 361.5664 L
347.0928 361.5664 L
347.0928 361.7695 L
347.7949 361.7695 L
347.7949 367.3789 L
347.0928 367.3789 L
347.0928 367.582 L
349.3721 367.582 L
349.3721 367.3789 L
348.6689 367.3789 L
348.6689 364.7988 L
351.2646 364.7988 l
f
*U
*u
1 D
356.3779 364.0039 m
357.1709 366.4443 L
357.1895 366.4443 L
357.9268 364.0039 l
356.3779 364.0039 L
f
356.4326 361.5664 m
356.4326 361.7695 L
355.6582 361.7695 L
356.2979 363.7539 L
358.0176 363.7539 L
358.6387 361.7695 L
357.9092 361.7695 L
357.9092 361.5664 L
360.1768 361.5664 L
360.1768 361.7695 L
359.5479 361.7695 L
357.6934 367.6602 L
357.3418 367.6602 L
355.3887 361.7695 L
354.6768 361.7695 L
354.6768 361.5664 l
356.4326 361.5664 L
f
*U
*u
0 D
362.0693 361.5664 m
362.0693 361.7695 L
362.7988 361.7695 L
362.7988 367.3789 L
362.0693 367.3789 L
362.0693 367.582 L
366.4668 367.582 L
366.5381 365.9893 L
366.377 365.9893 L
366.0957 367.0811 365.9424 367.3789 364.8154 367.3789 c
363.6729 367.3789 L
363.6729 364.7539 L
364.4736 364.7637 364.834 364.79 364.9238 365.6924 c
365.127 365.6924 L
365.127 363.4775 L
364.9326 363.4775 L
364.8691 364.4004 364.5098 364.5352 363.6729 364.5352 c
363.6729 361.7695 L
364.4473 361.7695 L
364.4473 361.5664 L
362.0693 361.5664 l
f
*U
*u
369.3135 361.5664 m
369.3135 361.7695 L
370.0615 361.7695 L
370.0615 367.3789 L
369.4482 367.3789 L
368.5928 367.3789 368.502 366.7393 368.3311 365.8457 c
368.0977 365.8457 L
368.1963 367.582 L
372.8418 367.582 L
372.9043 365.8457 L
372.6699 365.8457 L
372.5703 366.7021 372.2725 367.3789 371.333 367.3789 c
370.9355 367.3789 L
370.9355 361.7695 L
371.6855 361.7695 L
371.6855 361.5664 L
369.3135 361.5664 l
f
*U
U
0 R
1 0 0.57 0.3 K
300 Ar
0.3 w 10 M
223.1436 370.7969 m
373.0137 370.7969 l
S
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
